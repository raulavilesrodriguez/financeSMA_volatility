source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
View(prueba)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
View(prueba2)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
View(prueba2)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
View(rets)
nrow(rets[is.na(rets$MSFT.DailyEqPL), ])
nrow(rets[is.infinite(rets$MSFT.DailyEqPL), ])
charts.PerformanceSummary(rets["2022-01-03/2023-06-08"], colorset = "#DB005B")
charts.PerformanceSummary(rets["2023-01-31/2023-06-08"], colorset = "#DB005B")
charts.PerformanceSummary(rets["2023-02-13/2023-06-08"], colorset = "#DB005B")
charts.PerformanceSummary(rets["2023-03-21/2023-06-08"], colorset = "#DB005B")
sum(rets)
gsub(rets)
help(gsub)
rets <- PortfReturns(Account = account.st)
rownames(rets) <- NULL
rets <- PortfReturns(Account = account.st)
rownames(rets) <- NULL
tab <- table.Arbitrary(as.numeric(rets),
metrics=c(
"Return.cumulative",
"Return.annualized",
"SharpeRatio.annualized",
"CalmarRatio"),
metricsNames=c(
"Cumulative Return",
"Annualized Return",
"Annualized Sharpe Ratio",
"Calmar Ratio"))
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
max(rets)
min(rets)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
View(mktdata)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
View(prices)
range(prices$Txn.Qty)
max(prices$Txn.Qty)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
charts.PerformanceSummary(rets, colorset = "#DB005B")
rets[is.na(rets$MSFT.DailyEqPL), ]
nrow(rets[is.na(rets$MSFT.DailyEqPL), ])
nrow(rets[is.infinite(rets$MSFT.DailyEqPL), ])
nrow(rets[is.character(rets$MSFT.DailyEqPL), ])
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
.blotter$portfolio.strat1$summary$Net.Trading.PL
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
instrets <- PortfReturns(portfolio.st)
SharpeRatio.annualized(portpl, geometric = FALSE)
instrets <- PortfReturns(portfolio.st)
SharpeRatio.annualized(instrets, geometric = FALSE)
# evaluate the performance to see how is the return of the trading strategy
rets <- PortfReturns(Account = account.st)
rownames(rets) <- NULL
tab <- table.Arbitrary(rets,
metrics=c(
"Return.cumulative",
"Return.annualized",
"SharpeRatio.annualized",
"CalmarRatio"),
metricsNames=c(
"Cumulative Return",
"Annualized Return",
"Annualized Sharpe Ratio",
"Calmar Ratio"))
tab
charts.PerformanceSummary(rets, colorset = "#DB005B")
runSD(20,30)
#____Install blotter and quantstrat______
# First it is necessary install RTools 4.3 from:
# https://cran.r-project.org/bin/windows/Rtools/
#require(devtools)
#install_github("braverock/blotter")
#library(remotes)
#remotes::install_github("braverock/blotter")
#library(devtools)
#install_local(path = "blotter-master.zip")
#devtools::install_github("braverock/quantstrat")
#___Packages___
library(devtools)
library(blotter)
library(quantstrat)
library(quantmod)
library(FinancialInstrument)
library(PerformanceAnalytics)
library(foreach)
library(tidyverse)
library(dplyr)
library(TTR)
library("IRdisplay")
library(highcharter) #Interactive Plot
library(devtools)
library(yahoofinancer)
runSD(20,30)
runSD(c(1,2,34,2,4,51,2),30)
runSD(c(1,2,34,2,4,51,2),30, sample = FALSE)
runSD(c(1,2,34,2,4,51,2),5, sample = FALSE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
prices <- prices[-1,]
prices.sub <- prices[,c(1:6, 12)]
View(prices.sub)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
View(prices.sub)
View(prices.sub)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
#Interactive Plot
highchart(type="stock") |>
hc_yAxis_multiples(list(title = list(text = "Price"), opposite = FALSE),
list(showLastLabel = FALSE, opposite = TRUE, title = list(text = "Signal"))) |>
hc_add_series(prices.sub[,1:6]) |>
hc_add_series(SMA((prices.sub$Close),n=12),name="SMA(12)") |>
hc_add_series(SMA((prices.sub$Close),n=26),name="SMA(26)") |>
hc_add_series(prices.sub$Txn.Qty, name="Estrategia", yAxis = 1, color = "#F24C3D") |>
hc_title(text=paste0("<b>Prices company: ", symbols[1], "</b>"))
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
prices.sub$Txn.Qty[is.na(prices.sub$Txn.Qty)]
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
x <- load('datos.R')
library(devtools)
library(blotter)
library(quantstrat)
library(quantmod)
library(FinancialInstrument)
library(PerformanceAnalytics)
library(foreach)
library(tidyverse)
library(dplyr)
library(TTR)
library("IRdisplay")
library(highcharter) #Interactive Plot
library(devtools)
library(yahoofinancer)
x <- load('datos.R')
x <- load('datos.Rda')
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
source(here::here('datos.R'))
salida <- datos(1,2,3)
library(devtools)
library(blotter)
library(quantstrat)
library(quantmod)
library(FinancialInstrument)
library(PerformanceAnalytics)
library(foreach)
library(tidyverse)
library(dplyr)
library(TTR)
library("IRdisplay")
library(highcharter) #Interactive Plot
library(devtools)
library(yahoofinancer)
library(here)
source(here::here('datos.R'))
salida <- datos(1,2,3)
library(devtools)
library(blotter)
library(quantstrat)
library(quantmod)
library(FinancialInstrument)
library(PerformanceAnalytics)
library(foreach)
library(tidyverse)
library(dplyr)
library(TTR)
library("IRdisplay")
library(highcharter) #Interactive Plot
library(devtools)
library(yahoofinancer)
library(here)
source(here::here('datos.R'))
# ___Inputs___
from <- "2023-05-23"
to <- "2023-05-26"
symbols <- "AMZN"
salida <- datos(symbols, from, to)
View(salida)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
library(devtools)
library(blotter)
library(quantstrat)
library(quantmod)
library(FinancialInstrument)
library(PerformanceAnalytics)
library(foreach)
library(tidyverse)
library(dplyr)
library(TTR)
library("IRdisplay")
library(highcharter) #Interactive Plot
library(devtools)
library(yahoofinancer)
library(here)
source(here::here('datos.R'))
# ___Inputs___
from <- "2023-05-23"
to <- "2023-05-26"
symbols <- "AMZN"
salida <- datos(symbols, from, to)
View(salida)
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
datetime <- as.POSIXct("2023-09-22", tz = "America/New_York")
datatime
datetime
datetime <- as.POSIXct("2023-09-22 12:00:00", tz = "America/New_York")
datetime
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
View(salida)
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
View(salida)
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/sma_volatility.R", echo=TRUE)
View(datos)
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
View(mktdata)
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
library(devtools)
library(blotter)
library(quantstrat)
library(quantmod)
library(FinancialInstrument)
library(PerformanceAnalytics)
library(foreach)
library(tidyverse)
library(dplyr)
library(TTR)
library("IRdisplay")
library(highcharter) #Interactive Plot
library(devtools)
library(yahoofinancer)
library(here)
source(here::here('datos.R'))
# ___Inputs___
from <- Sys.Date() - 4
to <- Sys.Date()
symbols <- c("AMZN","DAL")
interval <- '1m'
getSymbols(symbols,from=from, to=to, src="yahoo", interval = "1m")
View(DAL)
source(here::here('datos.R'))
# ___Inputs___
from <- Sys.Date() - 4
to <- Sys.Date()
symbols <- c("AMZN","DAL")
interval <- '1d'
# get data
salida <- datos(symbols, from, to, interval)
source(here::here('datos.R'))
# ___Inputs___
from <- Sys.Date() - 4
to <- Sys.Date()
symbols <- c("AMZN","DAL")
interval <- '1d'
# get data
datos(symbols, from, to, interval)
source(here::here('datos.R'))
# ___Inputs___
from <- Sys.Date() - 4
to <- Sys.Date()
symbols <- "AMZN"
interval <- '1d'
# get data
datos(symbols, from, to, interval)
# ___Inputs___
from <- Sys.Date() - 4
to <- Sys.Date()
symbols <- "AMZN"
interval <- '1m'
# get data
datos(symbols, from, to, interval)
source(here::here('datos.R'))
# ___Inputs___
from <- Sys.Date() - 4
to <- Sys.Date()
symbols <- "AMZN"
interval <- '1m'
# get data
datos_1m <- datos(symbols, from, to, interval)
View(datos_1m)
# ___Inputs___
from <- Sys.Date() - 4
to <- Sys.Date()
symbols <- "AMZN"
interval <- '1m'
# get data
paste(datos, 'symbols') <- datos(symbols, from, to, interval)
quote(symbols)
symbols
paste(1, symbols)
we <- c('M', 'O')
we[1]
quote(we[1])
!!quo_name(symbols)
quo_name(symbols)
quo_name(we)
quo_name(we[1])
quo_name(symbols)
quo_name(symbols[1])
# ___Inputs___
from <- Sys.Date() - 4
to <- Sys.Date()
symbols <- "AMZN"
interval <- '1m'
# get data
quo_name(symbols[1]) <- datos(symbols, from, to, interval)
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
chartSeries(datos_1m)
#Interactive Plot
highchart(type="stock") |>
hc_yAxis_multiples(list(title = list(text = "Price"), opposite = FALSE),
list(showLastLabel = FALSE, opposite = TRUE, title = list(text = "Signal"))) |>
hc_add_series(datos_1m) |>
hc_add_series(SMA(datos_1m$close,n=12),name="SMA(12)") |>
hc_add_series(SMA(datos_1m$close,n=26),name="SMA(26)") |>
hc_title(text=paste0("<b>Prices company: ", symbols[1], "</b>")) |>
hc_add_theme(hc_theme_darkunica())
source(here::here('datos.R'))
# ___Inputs___
from <- Sys.Date() - 4
to <- Sys.Date()
symbols <- "AMZN"
interval <- '1m'
# get data
datos_1m <- datos(symbols, from, to, interval)
chartSeries(datos_1m)
#Interactive Plot
highchart(type="stock") |>
hc_add_series(datos_1m) |>
hc_add_series(SMA(datos_1m$close,n=12),name="SMA(12)") |>
hc_add_series(SMA(datos_1m$close,n=26),name="SMA(26)") |>
hc_title(text=paste0("<b>Prices company: ", symbols, "</b>")) |>
hc_add_theme(hc_theme_darkunica())
source("C:/Users/bravi/projects/financeSMAvolatility/day_trading.R", echo=TRUE)
class(datos_1m)
datos_1m <- as.xts(datos_1m)
chartSeries(datos_1m)
#Interactive Plot
highchart(type="stock") |>
hc_add_series(datos_1m) |>
#hc_add_series(SMA(datos_1m$close,n=12),name="SMA(12)") |>
#hc_add_series(SMA(datos_1m$close,n=26),name="SMA(26)") |>
hc_title(text=paste0("<b>Prices company: ", symbols, "</b>")) |>
hc_add_theme(hc_theme_darkunica())
#Interactive Plot
highchart(type="stock") |>
hc_add_series(datos_1m) |>
hc_add_series(SMA(datos_1m$close,n=12),name="SMA(12)") |>
hc_add_series(SMA(datos_1m$close,n=26),name="SMA(26)") |>
hc_title(text=paste0("<b>Prices company: ", symbols, "</b>")) |>
hc_add_theme(hc_theme_darkunica())
#Interactive Plot
highchart(type="stock") |>
hc_add_series(datos_1m) |>
hc_add_series(SMA(datos_1m$close,n=12),name="SMA(12)") |>
hc_add_series(SMA(datos_1m$close,n=26),name="SMA(26)") |>
hc_title(text=paste0("<b>Prices company: ", symbols, "</b>")) |>
hc_add_theme(hc_theme_alone())
#Interactive Plot
highchart(type="stock") |>
hc_add_series(datos_1m) |>
hc_add_series(SMA(datos_1m$close,n=12),name="SMA(12)") |>
hc_add_series(SMA(datos_1m$close,n=26),name="SMA(26)") |>
hc_title(text=paste0("<b>Prices company: ", symbols, "</b>")) |>
hc_add_theme(hc_theme_bloom())
#Interactive Plot
highchart(type="stock") |>
hc_add_series(datos_1m) |>
hc_add_series(SMA(datos_1m$close,n=12),name="SMA(12)") |>
hc_add_series(SMA(datos_1m$close,n=26),name="SMA(26)") |>
hc_title(text=paste0("<b>Prices company: ", symbols, "</b>")) |>
hc_add_theme(hc_theme_economist())
